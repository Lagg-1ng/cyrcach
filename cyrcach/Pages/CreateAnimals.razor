@page "/CreateAnimals"
@using cyrcach.Data
@inject WorkersService WoService

<div>
    <br/>
        <input type = "text" placeholder = "Вводим тип зверя  " @bind = "type_animals"/>
        <input type = "text" placeholder = "Вводим животное" @bind = "animals"/>   
        <input type = "number" placeholder = "Вводим уникальный номер" @bind = "id_animals"/>
        <br/>
        <input type = "number" placeholder = "Введите возраст зверя в годах" @bind = "age"/>
        <input type = "text" placeholder = "Введите пол животного" @bind = "gender"/>
        <input type = "date" placeholder = "Дата" @bind = "arrival_date_at_the_zoo"/>

        <select name="number" @bind="id_cage1">
        <option value="">Select a number</option>
        @GIDCage()
          @if (workers != null)
        {
            foreach (Worker w in workers)
            {
                 <option>
                    @w.Id_cage
                </option>
            }
        }
        </select>

        <select name="number" @bind="id_feeding1">
        <option value="">Select a number</option>
        @GIDFeeding()
          @if (workers != null)
        {
            foreach (Worker w in workers)
            {
                 <option>
                    @w.Id_fed
                </option>
            }
        }
        </select>

        <select name="number" @bind="Medical_id1">
        <option value="">Select a number</option>
        @GIDMed()
          @if (workers != null)
        {
            foreach (Worker w in workers)
            {
                 <option>
                    @w.Id_med
                </option>
            }
        }
        </select>

       
        <button @onclick = "GetWorckersUPP">Добавить животное</button>
        <button onclick= "history.go(-1)" > ← </button>
        <label>@search_error</label>
        

</div>

@code {
    private List<Worker> workers;
    private string? search_error;
    public int id_animals;
    public string? type_animals;
    public string? animals;
    public int age;
    public string? gender;
    public DateTime arrival_date_at_the_zoo;
    public string? offspring;
    public int id_feeding;
    public int Medical_id;
    public int cage_id;

    
     private async Task GIDAnimals()
    {
       workers = await WoService.GetWorkers6();
    }

    private int? _id_animals1 = null;
    private int? id_animals1
    {
        get
        {
            return _id_animals1;
        }
        set
        {
            _id_animals1 = value;
        }
    }
    private async Task GIDFeeding()
    {
       workers = await WoService.GetWorkers3();
    }

    private int? _id_feeding1 = null;
    private int? id_feeding1
    {
        get
        {
            return _id_feeding1;
        }
        set
        {
            _id_feeding1 = value;
        }
    }
    private async Task GIDCage()
    {
       workers = await WoService.GetWorkers5();
    }

    private int? _id_cage1 = null;
    private int? id_cage1
    {
        get
        {
            return _id_cage1;
        }
        set
        {
            _id_cage1 = value;
        }
    }

    private async Task GIDMed()
    {
       workers = await WoService.GetWorkers4();
    }

    private int? _Medical_id1 = null;
    private int? Medical_id1
    {
        get
        {
            return _Medical_id1;
        }
        set
        {
            _Medical_id1 = value;
        }
    }

    public async Task GetWorckersUPP()
    {
        workers = await WoService.CreateAnimals(id_animals,type_animals,animals,age,gender,arrival_date_at_the_zoo,id_feeding1.Value,Medical_id1.Value,id_cage1.Value);
    }
}